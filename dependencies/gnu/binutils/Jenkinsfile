def artifactory_name = "kristianj"
def artifactory_repo = "includeos-develop"
def repo_url = 'https://github.com/hioa-cs/IncludeOS.git'
def repo_branch = 'conan'

def conan_user = 'includeos'
def conan_channel = 'tools'

pipeline {
  agent {
    label 'conan_pipe_worker'
  }

  parameters {
    string(name: 'Versions', defaultValue: '2.31')
    string(name: 'Build_types', defaultValue: 'Debug, Release')
    string(name: 'Target_OS', defaultValue: 'Linux')
    string(name: 'Profiles', defaultValue: 'clang-6.0-linux-i386-toolchain, clang-6.0-linux-x86_64-toolchain, gcc-7.3.0-linux-i386-toolchain, gcc-8.2.0-linux-i386-toolchain, gcc-8.2.0-linux-x86_64-toolchain')
  }

  stages {
      stage('Build recipe - binutils') {
        steps {
          script {

            def versions = "${params.Versions}"
            def target_os = "${params.Target_OS}".replaceAll("\\s", "").split(',')
            def build_types = "${params.Build_types}".replaceAll("\\s", "").split(',')
            def profiles = "${params.Profiles}".replaceAll("\\s", "").split(',')

            currentBuild.description = "branch: ${GIT_BRANCH}, building: Binutils-${versions} \
            profile: ${profiles} \
            build_type: ${build_types}"

            def builds = [:]

            for (prof in profiles) {
              for (t_os in target_os) {
                  for (build in build_types) {
                    String buildName = "${build}-${prof}"

                    builds[buildName] = {
                      node('conan_pipe_worker') {
                          stage(buildName){
                                  git branch: repo_branch, url: repo_url
                                  sh """
                                    echo "creating binutils"
                                    conan create conan/gnu/binutils/${versions} \
                                    -s build_type=${build} \
                                    -s os=${t_os} \
                                    -pr ${prof} ${conan_user}/${conan_channel}
                                  """
                          }
                      }
                    }
                  }
              }
            }
            parallel builds
          }
        }
      }

      stage('Upload/ Export') {
        steps {
          script {
            sh """
              echo "lets export it to ${conan_user}/toolchain"
            """
          }
        }
      }
  }
}
